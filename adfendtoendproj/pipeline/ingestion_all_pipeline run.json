{
	"name": "ingestion_all_pipeline run",
	"properties": {
		"activities": [
			{
				"name": "newsSentiment ingest",
				"type": "ExecutePipeline",
				"dependsOn": [],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "newsSentiment ingest",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			},
			{
				"name": "certificationLatestVersion ingest",
				"type": "ExecutePipeline",
				"dependsOn": [],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "certificationLatestVersion ingest",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			},
			{
				"name": "partnerCertPassdate ingest",
				"type": "ExecutePipeline",
				"dependsOn": [],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "partnerCertPassdate",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			},
			{
				"name": "partnerlicensesales ingest",
				"type": "ExecutePipeline",
				"dependsOn": [],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "partnerlicensesales ingest",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			},
			{
				"name": "Set variable1",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "newsSentiment ingest",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "newsSentiment run",
					"value": "SUCCESS"
				}
			},
			{
				"name": "Set variable2",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "certificationLatestVersion ingest",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "certificationLatestVersion run",
					"value": "SUCCESS"
				}
			},
			{
				"name": "Set variable3",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "partnerCertPassdate ingest",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "partnerCertPassDate run",
					"value": "SUCCESS"
				}
			},
			{
				"name": "Set variable4",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "partnerlicensesales ingest",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "partnerLicenseSales run",
					"value": "SUCCESS"
				}
			},
			{
				"name": "If Condition1",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Set variable1",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set variable2",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set variable3",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set variable4",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@and(equals(variables('partnerCertPassDate run'),'SUCCESS'),\nand(equals(variables('newsSentiment run'),'SUCCESS'),\nand(equals(variables('partnerLicenseSales run'),'SUCCESS'),\nequals(variables('certificationLatestVersion run'),'SUCCESS'))))",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "copy-dbRaw2BronzeAdls",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"policy": {
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "copy-dbRaw2BronzeAdls",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true
							}
						}
					]
				}
			}
		],
		"variables": {
			"newsSentiment run": {
				"type": "String"
			},
			"certificationLatestVersion run": {
				"type": "String"
			},
			"partnerCertPassDate run": {
				"type": "String"
			},
			"partnerLicenseSales run": {
				"type": "String"
			}
		},
		"folder": {
			"name": "brandlicensesales"
		},
		"annotations": [],
		"lastPublishTime": "2024-11-12T06:35:02Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}